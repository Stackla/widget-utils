// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`loadPlayVideoHelper should escape the URL, width and height to prevent XSS 1`] = `
"<div class="icon-section">
        <div class="top-section">
            
            
        </div>
        <div class="center-section">
            
        </div>
        <div class="bottom-section">
            <div class="network-icon icon-instagram"></div>
            <shopspot-icon tile-id="undefined" />
        </div>
    </div>
  <img class='fallback-image' tile-id="undefined" src="undefined" loading="lazy" width="120"/>
  <video style="display:none;" reload="metadata" class="video-content" loading="lazy"  
  oncanplaythrough="this.removeAttribute('controls'); 
  this.muted=true; 
  this.parentElement.querySelector('.fallback-image').style.display='none'; 
  this.style.display='flex';
  this.parentElement.parentElement.parentElement.querySelectorAll('.icon-play').forEach((el) => {
    el.style.display='none';
  });
  " 
  controls autoplay muted loop>
  <source src="https://example.com/&lt;script&gt;alert(1)&lt;/script&gt;.mp4#t=0.1" type="video/mp4">
  </video>"
`;

exports[`loadPlayVideoHelper should generate a video tag with url, width and height 1`] = `
"<div class="icon-section">
        <div class="top-section">
            
            
        </div>
        <div class="center-section">
            
        </div>
        <div class="bottom-section">
            <div class="network-icon icon-instagram"></div>
            <shopspot-icon tile-id="undefined" />
        </div>
    </div>
  <img class='fallback-image' tile-id="undefined" src="undefined" loading="lazy" width="120"/>
  <video style="display:none;" reload="metadata" class="video-content" loading="lazy"  
  oncanplaythrough="this.removeAttribute('controls'); 
  this.muted=true; 
  this.parentElement.querySelector('.fallback-image').style.display='none'; 
  this.style.display='flex';
  this.parentElement.parentElement.parentElement.querySelectorAll('.icon-play').forEach((el) => {
    el.style.display='none';
  });
  " 
  controls autoplay muted loop>
  <source src="https://example.com/video.mp4#t=0.1" type="video/mp4">
  </video>"
`;

exports[`loadPlayVideoHelper should generate a video with embedly html 1`] = `
"<div class="icon-section">
        <div class="top-section">
            
            
        </div>
        <div class="center-section">
            
        </div>
        <div class="bottom-section">
            <div class="network-icon icon-tiktok"></div>
            <shopspot-icon tile-id="undefined" />
        </div>
    </div>
  <img class='fallback-image' tile-id="undefined" src="undefined" loading="lazy" width="120"/>
  <iframe loading="lazy" onload="this.removeAttribute('controls'); 
  this.muted=true; 
  this.parentElement.querySelector('.fallback-image').style.display='none'; 
  this.style.display='flex';
  this.parentElement.parentElement.parentElement.querySelectorAll('.icon-play').forEach((el) => {
    el.style.display='none';
  });
  " class="video-content" allowfullscreen src="https://www.tiktok.com/player/v1/7226405581324651819?autoplay=1&loop=1&controls=0"></iframe>"
`;

exports[`loadPlayVideoHelper should handle undefined width and height gracefully 1`] = `
"<div class="icon-section">
        <div class="top-section">
            
            
        </div>
        <div class="center-section">
            
        </div>
        <div class="bottom-section">
            <div class="network-icon icon-instagram"></div>
            <shopspot-icon tile-id="undefined" />
        </div>
    </div>
  <img class='fallback-image' tile-id="undefined" src="undefined" loading="lazy" width="120"/>
  <video style="display:none;" reload="metadata" class="video-content" loading="lazy"  
  oncanplaythrough="this.removeAttribute('controls'); 
  this.muted=true; 
  this.parentElement.querySelector('.fallback-image').style.display='none'; 
  this.style.display='flex';
  this.parentElement.parentElement.parentElement.querySelectorAll('.icon-play').forEach((el) => {
    el.style.display='none';
  });
  " 
  controls autoplay muted loop>
  <source src="https://example.com/video.mp4#t=0.1" type="video/mp4">
  </video>"
`;

exports[`loadPlayVideoHelper should return an empty string if URL is null or undefined 1`] = `
"<div class="icon-section">
        <div class="top-section">
            
            
        </div>
        <div class="center-section">
            
        </div>
        <div class="bottom-section">
            <div class="network-icon icon-instagram"></div>
            <shopspot-icon tile-id="undefined" />
        </div>
    </div>
  <img class='fallback-image' tile-id="undefined" src="undefined" loading="lazy" width="120"/>
  <video style="display:none;" reload="metadata" class="video-content" loading="lazy"  
  oncanplaythrough="this.removeAttribute('controls'); 
  this.muted=true; 
  this.parentElement.querySelector('.fallback-image').style.display='none'; 
  this.style.display='flex';
  this.parentElement.parentElement.parentElement.querySelectorAll('.icon-play').forEach((el) => {
    el.style.display='none';
  });
  " 
  controls autoplay muted loop>
  <source src="#t=0.1" type="video/mp4">
  </video>"
`;
